Module
module mindec(

input a,
input b,
input c,
output [0:7]D,
output f0,
output f1,
output f2
    );
    assign D[0] = (~a & ~b & ~c);
    assign D[1] = (~a & ~b & c);
    assign D[2] = (~a & b & ~c);
    assign D[3] = (~a & b & c);
    assign D[4] = (a & ~b & ~c);
    assign D[5] = (a & ~b & c);
    assign D[6] = (a & b & ~c);
    assign D[7] = (a & b & c);
   
  assign f0 = ~(~D[2] & ~D[4] & ~D[7]);
  assign f1 = ~(~D[0] & ~D[3]);
  assign f2 = ~(~(f0 & f0) & ~(f1 & f1));
endmodule


TESTBENCH

module mindec_tb;
  reg a;
  reg b;
  reg c;
  wire [0:7]D;
  wire f0;
  wire f1;
  wire f2;
  mindec uut(.a(a),.b(b),.c(c),.D(D),.f0(f0),.f1(f1),.f2(f2));
  
  initial begin
    a = 0;
    b = 0;
    c = 0;
    #100;
    a = 0;
    b = 0;
    c = 1;
    #100;
    a = 0;
    b = 1;
    c = 0;
    #100;
    a = 0;
    b = 1;
    c = 1;
    #100;
    a = 1;
    b = 0;
    c = 0;
    #100;
    a = 1;
    b = 0;
    c = 1;
    #100;
    a = 1;
    b = 1;
    c = 0;
    #100;
    a = 1;
    b = 1;
    c = 1;
    #100;
  end
  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0,mindec_tb);
  end
endmodule
    